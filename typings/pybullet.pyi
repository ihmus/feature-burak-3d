from typing import Any, overload

ACTIVATION_STATE_DISABLE_SLEEPING: int
ACTIVATION_STATE_DISABLE_WAKEUP: int
ACTIVATION_STATE_ENABLE_SLEEPING: int
ACTIVATION_STATE_ENABLE_WAKEUP: int
ACTIVATION_STATE_SLEEP: int
ACTIVATION_STATE_WAKE_UP: int
AddFileIOAction: int
B3G_ALT: int
B3G_BACKSPACE: int
B3G_CONTROL: int
B3G_DELETE: int
B3G_DOWN_ARROW: int
B3G_END: int
B3G_F1: int
B3G_F10: int
B3G_F11: int
B3G_F12: int
B3G_F13: int
B3G_F14: int
B3G_F15: int
B3G_F2: int
B3G_F3: int
B3G_F4: int
B3G_F5: int
B3G_F6: int
B3G_F7: int
B3G_F8: int
B3G_F9: int
B3G_HOME: int
B3G_INSERT: int
B3G_LEFT_ARROW: int
B3G_PAGE_DOWN: int
B3G_PAGE_UP: int
B3G_RETURN: int
B3G_RIGHT_ARROW: int
B3G_SHIFT: int
B3G_SPACE: int
B3G_UP_ARROW: int
CNSFileIO: int
CONSTRAINT_SOLVER_LCP_DANTZIG: int
CONSTRAINT_SOLVER_LCP_PGS: int
CONSTRAINT_SOLVER_LCP_SI: int
CONTACT_RECOMPUTE_CLOSEST: int
CONTACT_REPORT_EXISTING: int
COV_ENABLE_DEPTH_BUFFER_PREVIEW: int
COV_ENABLE_GUI: int
COV_ENABLE_KEYBOARD_SHORTCUTS: int
COV_ENABLE_MOUSE_PICKING: int
COV_ENABLE_PLANAR_REFLECTION: int
COV_ENABLE_RENDERING: int
COV_ENABLE_RGB_BUFFER_PREVIEW: int
COV_ENABLE_SEGMENTATION_MARK_PREVIEW: int
COV_ENABLE_SHADOWS: int
COV_ENABLE_SINGLE_STEP_RENDERING: int
COV_ENABLE_TINY_RENDERER: int
COV_ENABLE_VR_PICKING: int
COV_ENABLE_VR_RENDER_CONTROLLERS: int
COV_ENABLE_VR_TELEPORTING: int
COV_ENABLE_WIREFRAME: int
COV_ENABLE_Y_AXIS_UP: int
DIRECT: int
ER_BULLET_HARDWARE_OPENGL: int
ER_NO_SEGMENTATION_MASK: int
ER_SEGMENTATION_MASK_OBJECT_AND_LINKINDEX: int
ER_TINY_RENDERER: int
ER_USE_PROJECTIVE_TEXTURE: int
GEOM_BOX: int
GEOM_CAPSULE: int
GEOM_CONCAVE_INTERNAL_EDGE: int
GEOM_CYLINDER: int
GEOM_FORCE_CONCAVE_TRIMESH: int
GEOM_HEIGHTFIELD: int
GEOM_MESH: int
GEOM_PLANE: int
GEOM_SPHERE: int
GRAPHICS_CLIENT: int
GRAPHICS_SERVER: int
GRAPHICS_SERVER_MAIN_THREAD: int
GRAPHICS_SERVER_TCP: int
GUI: int
GUI_MAIN_THREAD: int
GUI_SERVER: int
IK_DLS: int
IK_HAS_JOINT_DAMPING: int
IK_HAS_NULL_SPACE_VELOCITY: int
IK_HAS_TARGET_ORIENTATION: int
IK_HAS_TARGET_POSITION: int
IK_SDLS: int
JOINT_FEEDBACK_IN_JOINT_FRAME: int
JOINT_FEEDBACK_IN_WORLD_SPACE: int
JOINT_FIXED: int
JOINT_GEAR: int
JOINT_PLANAR: int
JOINT_POINT2POINT: int
JOINT_PRISMATIC: int
JOINT_REVOLUTE: int
JOINT_SPHERICAL: int
KEY_IS_DOWN: int
KEY_WAS_RELEASED: int
KEY_WAS_TRIGGERED: int
LINK_FRAME: int
MAX_RAY_INTERSECTION_BATCH_SIZE: int
MESH_DATA_SIMULATION_MESH: int
MJCF_COLORS_FROM_FILE: int
PD_CONTROL: int
POSITION_CONTROL: int
PosixFileIO: int
RESET_USE_DEFORMABLE_WORLD: int
RESET_USE_DISCRETE_DYNAMICS_WORLD: int
RESET_USE_REDUCED_DEFORMABLE_WORLD: int
RESET_USE_SIMPLE_BROADPHASE: int
RemoveFileIOAction: int
SENSOR_FORCE_TORQUE: int
SHARED_MEMORY: int
SHARED_MEMORY_GUI: int
SHARED_MEMORY_KEY: int
SHARED_MEMORY_KEY2: int
SHARED_MEMORY_SERVER: int
STABLE_PD_CONTROL: int
STATE_LOGGING_ALL_COMMANDS: int
STATE_LOGGING_CONTACT_POINTS: int
STATE_LOGGING_CUSTOM_TIMER: int
STATE_LOGGING_GENERIC_ROBOT: int
STATE_LOGGING_MINITAUR: int
STATE_LOGGING_PROFILE_TIMINGS: int
STATE_LOGGING_VIDEO_MP4: int
STATE_LOGGING_VR_CONTROLLERS: int
STATE_LOG_JOINT_MOTOR_TORQUES: int
STATE_LOG_JOINT_TORQUES: int
STATE_LOG_JOINT_USER_TORQUES: int
STATE_REPLAY_ALL_COMMANDS: int
TCP: int
TORQUE_CONTROL: int
UDP: int
URDF_ENABLE_CACHED_GRAPHICS_SHAPES: int
URDF_ENABLE_SLEEPING: int
URDF_ENABLE_WAKEUP: int
URDF_GLOBAL_VELOCITIES_MB: int
URDF_GOOGLEY_UNDEFINED_COLORS: int
URDF_IGNORE_COLLISION_SHAPES: int
URDF_IGNORE_VISUAL_SHAPES: int
URDF_INITIALIZE_SAT_FEATURES: int
URDF_MAINTAIN_LINK_ORDER: int
URDF_MERGE_FIXED_LINKS: int
URDF_PRINT_URDF_INFO: int
URDF_USE_IMPLICIT_CYLINDER: int
URDF_USE_INERTIA_FROM_FILE: int
URDF_USE_MATERIAL_COLORS_FROM_MTL: int
URDF_USE_MATERIAL_TRANSPARANCY_FROM_MTL: int
URDF_USE_SELF_COLLISION: int
URDF_USE_SELF_COLLISION_EXCLUDE_ALL_PARENTS: int
URDF_USE_SELF_COLLISION_EXCLUDE_PARENT: int
URDF_USE_SELF_COLLISION_INCLUDE_PARENT: int
VELOCITY_CONTROL: int
VISUAL_SHAPE_DATA_TEXTURE_UNIQUE_IDS: int
VISUAL_SHAPE_DOUBLE_SIDED: int
VR_BUTTON_IS_DOWN: int
VR_BUTTON_WAS_RELEASED: int
VR_BUTTON_WAS_TRIGGERED: int
VR_CAMERA_TRACK_OBJECT_ORIENTATION: int
VR_DEVICE_CONTROLLER: int
VR_DEVICE_GENERIC_TRACKER: int
VR_DEVICE_HMD: int
VR_MAX_BUTTONS: int
VR_MAX_CONTROLLERS: int
WORLD_FRAME: int
ZipFileIO: int

class error(Exception): ...

def addUserData(bodyUniqueId, key, value, linkIndex=..., visualShapeIndex=..., physicsClientId=...) -> Any: ...
def addUserDebugLine(*args, **kwargs): ...
def addUserDebugParameter(*args, **kwargs): ...
def addUserDebugPoints(*args, **kwargs): ...
def addUserDebugText(*args, **kwargs): ...
def applyExternalForce(*args, **kwargs): ...
def applyExternalTorque(*args, **kwargs): ...
def calculateInverseDynamics(*args, **kwargs): ...
def calculateInverseKinematics(*args, **kwargs): ...
def calculateInverseKinematics2(*args, **kwargs): ...
def calculateJacobian(bodyUniqueId, linkIndex, localPosition, objPositions, objVelocities, objAccelerations, physicsClientId=...) -> Any: ...
def calculateMassMatrix(bodyUniqueId, objPositions, physicsClientId=...) -> Any: ...
def calculateVelocityQuaternion(*args, **kwargs): ...
def changeConstraint(*args, **kwargs): ...
def changeDynamics(*args, **kwargs): ...
def changeTexture(*args, **kwargs): ...
def changeVisualShape(*args, **kwargs): ...
def computeDofCount(*args, **kwargs): ...
def computeProjectionMatrix(*args, **kwargs): ...
def computeProjectionMatrixFOV(*args, **kwargs): ...
def computeViewMatrix(*args, **kwargs): ...
def computeViewMatrixFromYawPitchRoll(*args, **kwargs): ...
def configureDebugVisualizer(*args, **kwargs): ...
@overload
def connect(method, key=..., options=...) -> Any: ...
@overload
def connect(method, hostname=..., port=..., options=...) -> Any: ...
def createCollisionShape(*args, **kwargs): ...
def createCollisionShapeArray(*args, **kwargs): ...
def createConstraint(*args, **kwargs): ...
def createMultiBody(*args, **kwargs): ...
def createSoftBodyAnchor(*args, **kwargs): ...
def createVisualShape(*args, **kwargs): ...
def createVisualShapeArray(*args, **kwargs): ...
def disconnect(physicsClientId=...) -> Any: ...
def enableJointForceTorqueSensor(*args, **kwargs): ...
def executePluginCommand(*args, **kwargs): ...
def getAABB(*args, **kwargs): ...
def getAPIVersion(*args, **kwargs): ...
def getAxisAngleFromQuaternion(*args, **kwargs): ...
def getAxisDifferenceQuaternion(*args, **kwargs): ...
def getBasePositionAndOrientation(*args, **kwargs): ...
def getBaseVelocity(*args, **kwargs): ...
def getBodyInfo(*args, **kwargs): ...
def getBodyUniqueId(*args, **kwargs): ...
def getCameraImage(*args, **kwargs): ...
def getClosestPoints(*args, **kwargs): ...
def getCollisionShapeData(*args, **kwargs): ...
def getConnectionInfo(physicsClientId=...) -> Any: ...
def getConstraintInfo(*args, **kwargs): ...
def getConstraintState(*args, **kwargs): ...
def getConstraintUniqueId(*args, **kwargs): ...
def getContactPoints(*args, **kwargs): ...
def getDebugVisualizerCamera(*args, **kwargs): ...
def getDifferenceQuaternion(*args, **kwargs): ...
def getDynamicsInfo(*args, **kwargs): ...
def getEulerFromQuaternion(*args, **kwargs): ...
def getJointInfo(*args, **kwargs): ...
def getJointState(*args, **kwargs): ...
def getJointStateMultiDof(*args, **kwargs): ...
def getJointStates(*args, **kwargs): ...
def getJointStatesMultiDof(*args, **kwargs): ...
def getKeyboardEvents(*args, **kwargs): ...
def getLinkState(objectUniqueId, linkIndex, computeLinkVelocity=..., 
computeForwardKinematics=..., physicsClientId=...) -> Any: ...
def getLinkStates(*args, **kwargs): ...
def getMatrixFromQuaternion(*args, **kwargs): ...
def getMeshData(*args, **kwargs): ...
def getMouseEvents(*args, **kwargs): ...
def getNumBodies(*args, **kwargs): ...
def getNumConstraints(*args, **kwargs): ...
def getNumJoints(*args, **kwargs): ...
def getNumUserData(bodyUniqueIdphysicsClientId=...) -> Any: ...
def getOverlappingObjects(*args, **kwargs): ...
def getPhysicsEngineParameters(*args, **kwargs): ...
def getQuaternionFromAxisAngle(*args, **kwargs): ...
def getQuaternionFromEuler(*args, **kwargs): ...
def getQuaternionSlerp(*args, **kwargs): ...
def getTetraMeshData(*args, **kwargs): ...
def getUserData(userDataId, physicsClientId=...) -> Any: ...
def getUserDataId(bodyUniqueId, key, linkIndex=..., visualShapeIndex=..., physicsClientId=...) -> Any: ...
def getUserDataInfo(bodyUniqueId, userDataIndex, physicsClientId=...) -> Any: ...
def getVREvents(*args, **kwargs): ...
def getVisualShapeData(*args, **kwargs): ...
def invertTransform(*args, **kwargs): ...
def isConnected(physicsClientId=...) -> Any: ...
def isNumpyEnabled(*args, **kwargs): ...
def loadBullet(*args, **kwargs): ...
def loadMJCF(*args, **kwargs): ...
def loadPlugin(*args, **kwargs): ...
def loadSDF(*args, **kwargs): ...
def loadSoftBody(*args, **kwargs): ...
def loadTexture(*args, **kwargs): ...
def loadURDF(fileName, basePosition=..., baseOrientation=..., useMaximalCoordinates=..., useFixedBase=..., flags=..., globalScaling=..., physicsClientId=...) -> Any: ...
def multiplyTransforms(*args, **kwargs): ...
def performCollisionDetection(physicsClientId=...) -> Any: ...
def rayTest(*args, **kwargs): ...
def rayTestBatch(*args, **kwargs): ...
def readUserDebugParameter(*args, **kwargs): ...
def removeAllUserDebugItems(*args, **kwargs): ...
def removeAllUserParameters(*args, **kwargs): ...
def removeBody(*args, **kwargs): ...
def removeCollisionShape(*args, **kwargs): ...
def removeConstraint(*args, **kwargs): ...
def removeState(*args, **kwargs): ...
def removeUserData(userDataId, physicsClientId=...) -> Any: ...
def removeUserDebugItem(*args, **kwargs): ...
def renderImage(*args, **kwargs): ...
def resetBasePositionAndOrientation(*args, **kwargs): ...
def resetBaseVelocity(*args, **kwargs): ...
def resetDebugVisualizerCamera(*args, **kwargs): ...
def resetJointState(objectUniqueId, jointIndex, targetValue, targetVelocity=..., physicsClientId=...) -> Any: ...
def resetJointStateMultiDof(objectUniqueId, jointIndex, targetValue, targetVelocity=..., physicsClientId=...) -> Any: ...
def resetJointStatesMultiDof(objectUniqueId, jointIndices, targetValues, targetVelocities=..., physicsClientId=...) -> Any: ...
def resetMeshData(*args, **kwargs): ...
def resetSimulation(physicsClientId=...) -> Any: ...
def resetVisualShapeData(*args, **kwargs): ...
def restoreState(*args, **kwargs): ...
def rotateVector(*args, **kwargs): ...
def saveBullet(*args, **kwargs): ...
def saveState(*args, **kwargs): ...
def saveWorld(filename) -> Any: ...
def setAdditionalSearchPath(*args, **kwargs): ...
def setCollisionFilterGroupMask(*args, **kwargs): ...
def setCollisionFilterPair(*args, **kwargs): ...
def setDebugObjectColor(*args, **kwargs): ...
def setDefaultContactERP(defaultContactERP, physicsClientId=...) -> Any: ...
def setGravity(gravX, gravY, gravZ, physicsClientId=...) -> Any: ...
def setInternalSimFlags(*args, **kwargs): ...
def setJointMotorControl(*args, **kwargs): ...
def setJointMotorControl2(*args, **kwargs): ...
def setJointMotorControlArray(*args, **kwargs): ...
def setJointMotorControlMultiDof(*args, **kwargs): ...
def setJointMotorControlMultiDofArray(*args, **kwargs): ...
def setPhysicsEngineParameter(*args, **kwargs): ...
def setRealTimeSimulation(enableRealTimeSimulation, physicsClientId=...) -> Any: ...
def setTimeOut(*args, **kwargs): ...
def setTimeStep(timestep, physicsClientId=...) -> Any: ...
def setVRCameraState(*args, **kwargs): ...
def startStateLogging(*args, **kwargs): ...
def stepSimulation(physicsClientId=...) -> Any: ...
def stopStateLogging(*args, **kwargs): ...
def submitProfileTiming(*args, **kwargs): ...
def syncBodyInfo(physicsClientId=...) -> Any: ...
def syncUserData(bodyUniqueIds=..., physicsClientId=...) -> Any: ...
def unloadPlugin(*args, **kwargs): ...
def unsupportedChangeScaling(*args, **kwargs): ...
def vhacd(*args, **kwargs): ...
